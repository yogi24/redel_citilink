/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.redel_citilink.redelga;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * TaskSchedule generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`task_schedule`")
public class TaskSchedule implements Serializable {

    private Integer id;
    private Integer campTaskId;
    private Integer aircraftId;
    private String fhRemainToMt;
    private String fcRemainToMt;
    private String dayRemainToMt;
    private Date lastDoneDate;
    private Date nextDueDate;
    private Aircraft aircraft;
    private CampTask campTask;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`camp_task_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCampTaskId() {
        return this.campTaskId;
    }

    public void setCampTaskId(Integer campTaskId) {
        this.campTaskId = campTaskId;
    }

    @Column(name = "`aircraft_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAircraftId() {
        return this.aircraftId;
    }

    public void setAircraftId(Integer aircraftId) {
        this.aircraftId = aircraftId;
    }

    @Column(name = "`fh_remain_to_mt`", nullable = true, length = 255)
    public String getFhRemainToMt() {
        return this.fhRemainToMt;
    }

    public void setFhRemainToMt(String fhRemainToMt) {
        this.fhRemainToMt = fhRemainToMt;
    }

    @Column(name = "`fc_remain_to_mt`", nullable = true, length = 255)
    public String getFcRemainToMt() {
        return this.fcRemainToMt;
    }

    public void setFcRemainToMt(String fcRemainToMt) {
        this.fcRemainToMt = fcRemainToMt;
    }

    @Column(name = "`day_remain_to_mt`", nullable = true, length = 255)
    public String getDayRemainToMt() {
        return this.dayRemainToMt;
    }

    public void setDayRemainToMt(String dayRemainToMt) {
        this.dayRemainToMt = dayRemainToMt;
    }

    @Column(name = "`last_done_date`", nullable = true)
    public Date getLastDoneDate() {
        return this.lastDoneDate;
    }

    public void setLastDoneDate(Date lastDoneDate) {
        this.lastDoneDate = lastDoneDate;
    }

    @Column(name = "`next_due_date`", nullable = true)
    public Date getNextDueDate() {
        return this.nextDueDate;
    }

    public void setNextDueDate(Date nextDueDate) {
        this.nextDueDate = nextDueDate;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`aircraft_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_aircraft_TO_task-sche7o4Vg`"))
    @Fetch(FetchMode.JOIN)
    public Aircraft getAircraft() {
        return this.aircraft;
    }

    public void setAircraft(Aircraft aircraft) {
        if(aircraft != null) {
            this.aircraftId = aircraft.getId();
        }

        this.aircraft = aircraft;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`camp_task_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_camp_task_TO_task-schJMeI9`"))
    @Fetch(FetchMode.JOIN)
    public CampTask getCampTask() {
        return this.campTask;
    }

    public void setCampTask(CampTask campTask) {
        if(campTask != null) {
            this.campTaskId = campTask.getId();
        }

        this.campTask = campTask;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TaskSchedule)) return false;
        final TaskSchedule taskSchedule = (TaskSchedule) o;
        return Objects.equals(getId(), taskSchedule.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}