/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.redel_citilink.redelga;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * AircraftUtilizationInfo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`aircraft_utilization_info`")
public class AircraftUtilizationInfo implements Serializable {

    private Integer id;
    private Integer aircraftId;
    private Integer fhAfterLastMt;
    private Integer fcAfterLastMt;
    private Integer dailyForecastFh;
    private Integer dailyForecastFc;
    private Date lastMtDateStart;
    private Date lastMtDateEnd;
    private Date nextMtDateStart;
    private Date nextMtDateEnd;
    private Integer weeklyForecastFh;
    private Integer weeklyForecastFc;
    private Integer yearlyForecastFh;
    private Integer yearlyForecastFc;
    private Aircraft aircraft;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`aircraft_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAircraftId() {
        return this.aircraftId;
    }

    public void setAircraftId(Integer aircraftId) {
        this.aircraftId = aircraftId;
    }

    @Column(name = "`fh_after_last_mt`", nullable = true, scale = 0, precision = 10)
    public Integer getFhAfterLastMt() {
        return this.fhAfterLastMt;
    }

    public void setFhAfterLastMt(Integer fhAfterLastMt) {
        this.fhAfterLastMt = fhAfterLastMt;
    }

    @Column(name = "`fc_after_last_mt`", nullable = true, scale = 0, precision = 10)
    public Integer getFcAfterLastMt() {
        return this.fcAfterLastMt;
    }

    public void setFcAfterLastMt(Integer fcAfterLastMt) {
        this.fcAfterLastMt = fcAfterLastMt;
    }

    @Column(name = "`daily_forecast_fh`", nullable = true, scale = 0, precision = 10)
    public Integer getDailyForecastFh() {
        return this.dailyForecastFh;
    }

    public void setDailyForecastFh(Integer dailyForecastFh) {
        this.dailyForecastFh = dailyForecastFh;
    }

    @Column(name = "`daily_forecast_fc`", nullable = true, scale = 0, precision = 10)
    public Integer getDailyForecastFc() {
        return this.dailyForecastFc;
    }

    public void setDailyForecastFc(Integer dailyForecastFc) {
        this.dailyForecastFc = dailyForecastFc;
    }

    @Column(name = "`last_mt_date_start`", nullable = true)
    public Date getLastMtDateStart() {
        return this.lastMtDateStart;
    }

    public void setLastMtDateStart(Date lastMtDateStart) {
        this.lastMtDateStart = lastMtDateStart;
    }

    @Column(name = "`last_mt_date_end`", nullable = true)
    public Date getLastMtDateEnd() {
        return this.lastMtDateEnd;
    }

    public void setLastMtDateEnd(Date lastMtDateEnd) {
        this.lastMtDateEnd = lastMtDateEnd;
    }

    @Column(name = "`next_mt_date_start`", nullable = true)
    public Date getNextMtDateStart() {
        return this.nextMtDateStart;
    }

    public void setNextMtDateStart(Date nextMtDateStart) {
        this.nextMtDateStart = nextMtDateStart;
    }

    @Column(name = "`next_mt_date_end`", nullable = true)
    public Date getNextMtDateEnd() {
        return this.nextMtDateEnd;
    }

    public void setNextMtDateEnd(Date nextMtDateEnd) {
        this.nextMtDateEnd = nextMtDateEnd;
    }

    @Column(name = "`weekly_forecast_fh`", nullable = true, scale = 0, precision = 10)
    public Integer getWeeklyForecastFh() {
        return this.weeklyForecastFh;
    }

    public void setWeeklyForecastFh(Integer weeklyForecastFh) {
        this.weeklyForecastFh = weeklyForecastFh;
    }

    @Column(name = "`weekly_forecast_fc`", nullable = true, scale = 0, precision = 10)
    public Integer getWeeklyForecastFc() {
        return this.weeklyForecastFc;
    }

    public void setWeeklyForecastFc(Integer weeklyForecastFc) {
        this.weeklyForecastFc = weeklyForecastFc;
    }

    @Column(name = "`yearly_forecast_fh`", nullable = true, scale = 0, precision = 10)
    public Integer getYearlyForecastFh() {
        return this.yearlyForecastFh;
    }

    public void setYearlyForecastFh(Integer yearlyForecastFh) {
        this.yearlyForecastFh = yearlyForecastFh;
    }

    @Column(name = "`yearly_forecast_fc`", nullable = true, scale = 0, precision = 10)
    public Integer getYearlyForecastFc() {
        return this.yearlyForecastFc;
    }

    public void setYearlyForecastFc(Integer yearlyForecastFc) {
        this.yearlyForecastFc = yearlyForecastFc;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`aircraft_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_aircraft_TO_aicraft_ugvpL2`"))
    @Fetch(FetchMode.JOIN)
    public Aircraft getAircraft() {
        return this.aircraft;
    }

    public void setAircraft(Aircraft aircraft) {
        if(aircraft != null) {
            this.aircraftId = aircraft.getId();
        }

        this.aircraft = aircraft;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AircraftUtilizationInfo)) return false;
        final AircraftUtilizationInfo aircraftUtilizationInfo = (AircraftUtilizationInfo) o;
        return Objects.equals(getId(), aircraftUtilizationInfo.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}