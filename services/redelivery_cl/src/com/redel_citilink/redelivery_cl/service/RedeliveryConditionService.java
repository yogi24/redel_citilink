/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.redel_citilink.redelivery_cl.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import com.redel_citilink.redelivery_cl.RedeliveryCondition;

/**
 * Service object for domain model class {@link RedeliveryCondition}.
 */
public interface RedeliveryConditionService {

    /**
     * Creates a new RedeliveryCondition. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on RedeliveryCondition if any.
     *
     * @param redeliveryCondition Details of the RedeliveryCondition to be created; value cannot be null.
     * @return The newly created RedeliveryCondition.
     */
    RedeliveryCondition create(@Valid RedeliveryCondition redeliveryCondition);


	/**
     * Returns RedeliveryCondition by given id if exists.
     *
     * @param redeliveryconditionId The id of the RedeliveryCondition to get; value cannot be null.
     * @return RedeliveryCondition associated with the given redeliveryconditionId.
	 * @throws EntityNotFoundException If no RedeliveryCondition is found.
     */
    RedeliveryCondition getById(Integer redeliveryconditionId);

    /**
     * Find and return the RedeliveryCondition by given id if exists, returns null otherwise.
     *
     * @param redeliveryconditionId The id of the RedeliveryCondition to get; value cannot be null.
     * @return RedeliveryCondition associated with the given redeliveryconditionId.
     */
    RedeliveryCondition findById(Integer redeliveryconditionId);

	/**
     * Find and return the list of RedeliveryConditions by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param redeliveryconditionIds The id's of the RedeliveryCondition to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return RedeliveryConditions associated with the given redeliveryconditionIds.
     */
    List<RedeliveryCondition> findByMultipleIds(List<Integer> redeliveryconditionIds, boolean orderedReturn);


    /**
     * Updates the details of an existing RedeliveryCondition. It replaces all fields of the existing RedeliveryCondition with the given redeliveryCondition.
     *
     * This method overrides the input field values using Server side or database managed properties defined on RedeliveryCondition if any.
     *
     * @param redeliveryCondition The details of the RedeliveryCondition to be updated; value cannot be null.
     * @return The updated RedeliveryCondition.
     * @throws EntityNotFoundException if no RedeliveryCondition is found with given input.
     */
    RedeliveryCondition update(@Valid RedeliveryCondition redeliveryCondition);

    /**
     * Deletes an existing RedeliveryCondition with the given id.
     *
     * @param redeliveryconditionId The id of the RedeliveryCondition to be deleted; value cannot be null.
     * @return The deleted RedeliveryCondition.
     * @throws EntityNotFoundException if no RedeliveryCondition found with the given id.
     */
    RedeliveryCondition delete(Integer redeliveryconditionId);

    /**
     * Deletes an existing RedeliveryCondition with the given object.
     *
     * @param redeliveryCondition The instance of the RedeliveryCondition to be deleted; value cannot be null.
     */
    void delete(RedeliveryCondition redeliveryCondition);

    /**
     * Find all RedeliveryConditions matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching RedeliveryConditions.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<RedeliveryCondition> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all RedeliveryConditions matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching RedeliveryConditions.
     *
     * @see Pageable
     * @see Page
     */
    Page<RedeliveryCondition> findAll(String query, Pageable pageable);

    /**
     * Exports all RedeliveryConditions matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all RedeliveryConditions matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the RedeliveryConditions in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the RedeliveryCondition.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}