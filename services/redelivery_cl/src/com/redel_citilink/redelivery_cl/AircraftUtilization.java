/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.redel_citilink.redelivery_cl;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * AircraftUtilization generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`aircraft_utilization`")
public class AircraftUtilization implements Serializable {

    private Integer id;
    private Integer acId;
    private String flDate;
    private String flMonth;
    private String castFlightHours;
    private String actualFlightHours;
    private String castFlightCycle;
    private String actualFlightCycle;
    private Aircraft aircraft;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "\"aircraft_utilization_ID_seq\"" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`ac_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAcId() {
        return this.acId;
    }

    public void setAcId(Integer acId) {
        this.acId = acId;
    }

    @Column(name = "`fl_date`", nullable = true, length = 255)
    public String getFlDate() {
        return this.flDate;
    }

    public void setFlDate(String flDate) {
        this.flDate = flDate;
    }

    @Column(name = "`fl_month`", nullable = true, length = 255)
    public String getFlMonth() {
        return this.flMonth;
    }

    public void setFlMonth(String flMonth) {
        this.flMonth = flMonth;
    }

    @Column(name = "`cast_flight_hours`", nullable = true, length = 255)
    public String getCastFlightHours() {
        return this.castFlightHours;
    }

    public void setCastFlightHours(String castFlightHours) {
        this.castFlightHours = castFlightHours;
    }

    @Column(name = "`actual_flight_hours`", nullable = true, length = 255)
    public String getActualFlightHours() {
        return this.actualFlightHours;
    }

    public void setActualFlightHours(String actualFlightHours) {
        this.actualFlightHours = actualFlightHours;
    }

    @Column(name = "`cast_flight_cycle`", nullable = true, length = 255)
    public String getCastFlightCycle() {
        return this.castFlightCycle;
    }

    public void setCastFlightCycle(String castFlightCycle) {
        this.castFlightCycle = castFlightCycle;
    }

    @Column(name = "`actual_flight_cycle`", nullable = true, length = 255)
    public String getActualFlightCycle() {
        return this.actualFlightCycle;
    }

    public void setActualFlightCycle(String actualFlightCycle) {
        this.actualFlightCycle = actualFlightCycle;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ac_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_aircraft_utilization_1p1k5`"))
    @Fetch(FetchMode.JOIN)
    public Aircraft getAircraft() {
        return this.aircraft;
    }

    public void setAircraft(Aircraft aircraft) {
        if(aircraft != null) {
            this.acId = aircraft.getId();
        }

        this.aircraft = aircraft;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AircraftUtilization)) return false;
        final AircraftUtilization aircraftUtilization = (AircraftUtilization) o;
        return Objects.equals(getId(), aircraftUtilization.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}