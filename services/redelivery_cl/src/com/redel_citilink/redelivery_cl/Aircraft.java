/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.redel_citilink.redelivery_cl;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PostPersist;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Aircraft generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`aircraft`")
public class Aircraft implements Serializable {

    private Integer id;
    private String acMsn;
    private String acReg;
    private String acCompany;
    private Integer acType;
    private String acRedelDate;
    private String acFlightHours;
    private String acFlightCycle;
    private AircraftType aircraftType;
    private List<RedeliveryCondition> redeliveryConditions;
    private List<MtcTaskPlanned> mtcTaskPlanneds;
    private List<AircraftUtilization> aircraftUtilizations;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`aircraft_ID_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`ac_msn`", nullable = true, length = 255)
    public String getAcMsn() {
        return this.acMsn;
    }

    public void setAcMsn(String acMsn) {
        this.acMsn = acMsn;
    }

    @Column(name = "`ac_reg`", nullable = true, length = 255)
    public String getAcReg() {
        return this.acReg;
    }

    public void setAcReg(String acReg) {
        this.acReg = acReg;
    }

    @Column(name = "`ac_company`", nullable = true, length = 255)
    public String getAcCompany() {
        return this.acCompany;
    }

    public void setAcCompany(String acCompany) {
        this.acCompany = acCompany;
    }

    @Column(name = "`ac_type`", nullable = true, scale = 0, precision = 10)
    public Integer getAcType() {
        return this.acType;
    }

    public void setAcType(Integer acType) {
        this.acType = acType;
    }

    @Column(name = "`ac_redel_date`", nullable = true, length = 255)
    public String getAcRedelDate() {
        return this.acRedelDate;
    }

    public void setAcRedelDate(String acRedelDate) {
        this.acRedelDate = acRedelDate;
    }

    @Column(name = "`ac_flight_hours`", nullable = true, length = 255)
    public String getAcFlightHours() {
        return this.acFlightHours;
    }

    public void setAcFlightHours(String acFlightHours) {
        this.acFlightHours = acFlightHours;
    }

    @Column(name = "`ac_flight_cycle`", nullable = true, length = 255)
    public String getAcFlightCycle() {
        return this.acFlightCycle;
    }

    public void setAcFlightCycle(String acFlightCycle) {
        this.acFlightCycle = acFlightCycle;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ac_type`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_aircraft_TO_aircraft_rnxab`"))
    @Fetch(FetchMode.JOIN)
    public AircraftType getAircraftType() {
        return this.aircraftType;
    }

    public void setAircraftType(AircraftType aircraftType) {
        if(aircraftType != null) {
            this.acType = aircraftType.getId();
        }

        this.aircraftType = aircraftType;
    }
    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "aircraft")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<RedeliveryCondition> getRedeliveryConditions() {
        return this.redeliveryConditions;
    }

    public void setRedeliveryConditions(List<RedeliveryCondition> redeliveryConditions) {
        this.redeliveryConditions = redeliveryConditions;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "aircraft")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<MtcTaskPlanned> getMtcTaskPlanneds() {
        return this.mtcTaskPlanneds;
    }

    public void setMtcTaskPlanneds(List<MtcTaskPlanned> mtcTaskPlanneds) {
        this.mtcTaskPlanneds = mtcTaskPlanneds;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "aircraft")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<AircraftUtilization> getAircraftUtilizations() {
        return this.aircraftUtilizations;
    }

    public void setAircraftUtilizations(List<AircraftUtilization> aircraftUtilizations) {
        this.aircraftUtilizations = aircraftUtilizations;
    }

    @PostPersist
    public void onPostPersist() {
        if(redeliveryConditions != null) {
            redeliveryConditions.forEach(_redeliveryCondition -> _redeliveryCondition.setAircraft(this));
        }
        if(mtcTaskPlanneds != null) {
            mtcTaskPlanneds.forEach(_mtcTaskPlanned -> _mtcTaskPlanned.setAircraft(this));
        }
        if(aircraftUtilizations != null) {
            aircraftUtilizations.forEach(_aircraftUtilization -> _aircraftUtilization.setAircraft(this));
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Aircraft)) return false;
        final Aircraft aircraft = (Aircraft) o;
        return Objects.equals(getId(), aircraft.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}